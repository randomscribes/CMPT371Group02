<source file="./cmpt371group02/src/java/logout/LogoutServlet.java" startline="32" endline="59">
protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("text/html;charset=UTF-8");
    PrintWriter out = response.getWriter ();
    HttpSession session = request.getSession ();
    session.invalidate ();
    response.sendRedirect ("login.jsp");
    try {
    } finally {
        out.close ();
    }
}
</source>
<source file="./cmpt371group02/src/java/logout/LogoutServlet.java" startline="69" endline="73">
@Override
protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/logout/LogoutServlet.java" startline="82" endline="86">
@Override
protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/logout/LogoutServlet.java" startline="92" endline="95">
@Override
public String getServletInfo () {
    return "Short description";
}
</source>
<source file="./cmpt371group02/src/java/homeButton/homeButtonServlet.java" startline="28" endline="48">
protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("text/html;charset=UTF-8");
    PrintWriter out = response.getWriter ();
    response.sendRedirect ("adminHome.jsp");
    try {
    } finally {
        out.close ();
    }
}
</source>
<source file="./cmpt371group02/src/java/homeButton/homeButtonServlet.java" startline="58" endline="62">
@Override
protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/homeButton/homeButtonServlet.java" startline="71" endline="75">
@Override
protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/homeButton/homeButtonServlet.java" startline="81" endline="84">
@Override
public String getServletInfo () {
    return "Short description";
}
</source>
<source file="./cmpt371group02/src/java/editRoster/addToRosterServ.java" startline="31" endline="62">
protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("text/html");
    out = response.getWriter ();
    usr = new editRoster ();
    String suser_id = request.getParameter ("user_id");
    String steam_id = request.getParameter ("addTeam");
    if (suser_id.equals ("")) {
        out.println ("<div style=\"color:red;\">Please enter a user</div>");
    } else if (steam_id.equals ("")) {
        out.println ("<div style=\"color:red;\">Please select a team</div>");
    } else {
        Integer user_id = Integer.parseInt (suser_id);
        Integer team_id = Integer.parseInt (steam_id);
        try {
            if (usr.addUser (user_id, team_id)) {
                out.println ("<label style=\"color:green;\"> User #" + user_id + "</label><div style=\"color:green;\"> Added to roster successfully</div>");
            } else {
                out.println ("<label style=\"color:red;\"> User #" + user_id + "</label><div style=\"color:red;\">Not added to roster</div>");
            }
        } catch (SQLException e) {
        }
    }

    out.close ();
}
</source>
<source file="./cmpt371group02/src/java/editRoster/addToRosterServ.java" startline="72" endline="76">
@Override
protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/editRoster/addToRosterServ.java" startline="85" endline="89">
@Override
protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/editRoster/addToRosterServ.java" startline="95" endline="98">
@Override
public String getServletInfo () {
    return "Short description";
}
</source>
<source file="./cmpt371group02/src/java/editRoster/displayRosterUserServ.java" startline="37" endline="62">
protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("text/html");
    out = response.getWriter ();
    usr = new editRoster ();
    try {
        Vector rs = usr.getUsers ();
        String title = "Display User List";
        Vector tblHeader = new Vector ();
        tblHeader.addElement ("Player's ID");
        tblHeader.addElement ("Last Name");
        tblHeader.addElement ("First Name");
        tblHeader.addElement ("Current Team");
        display (rs, tblHeader, title, response);
    } catch (SQLException e) {
        out.println ("No users found");
    } catch (Exception e) {
        out.println ("No users found");
    } finally {
        out.close ();
    }
}
</source>
<source file="./cmpt371group02/src/java/editRoster/displayRosterUserServ.java" startline="71" endline="106">
private void display (Vector rows, Vector hdr, String title, HttpServletResponse response) throws SQLException, Exception {
    usrTeam = new playerManagerProfile ();
    response.setContentType ("text/html");
    out.println ("<HTML><HEAD><TITLE>");
    out.println ("Sports Management System");
    out.println ("</TITLE></HEAD><BODY>");
    out.println ("<tbody>");
    out.println ("<h1 id=\"table_id\">All Players</h1>");
    out.println ("<table id=\"hor-minimalist-a\" >");
    out.println ("<tr valign=Top>");
    for (int i = 0;
    i < hdr.size (); i ++) {
        out.println ("<td valign=Top><b>" + hdr.elementAt (i).toString () + "</b><br></td>");
    }
    out.println ("</tr>");
    for (int i = 0;
    i < rows.size (); i ++) {
        out.println ("<tr valign=Top>");
        Vector row = (Vector) rows.elementAt (i);
        for (int j = 0;
        j < row.size (); j ++) {
            if (j != 3) {
                out.println ("<td valign=Top>" + row.elementAt (j).toString () + "<br></td>");
            } else {
                out.println ("<td valign=Top>" + usrTeam.getTeamName (row.elementAt (3).toString ()) + "<br></td>");
            }
        }
        out.println ("</tr>");
    }
    out.println ("</table>");
    out.println ("</tbody>");
    out.println ("</BODY></HTML>");
    out.close ();
}
</source>
<source file="./cmpt371group02/src/java/editRoster/displayRosterUserServ.java" startline="116" endline="120">
@Override
protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/editRoster/displayRosterUserServ.java" startline="129" endline="133">
@Override
protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/editRoster/displayRosterUserServ.java" startline="139" endline="142">
@Override
public String getServletInfo () {
    return "Short description";
}
</source>
<source file="./cmpt371group02/src/java/editRoster/removeFromRosterServ.java" startline="36" endline="63">
protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("text/html");
    out = response.getWriter ();
    usr = new editRoster ();
    String suser_id_rem = request.getParameter ("user_id");
    if (suser_id_rem == "") {
        out.println ("<div style=\"color:red;\"> Please enter a user ID</div>");
    } else {
        int user_id_rem = Integer.parseInt (suser_id_rem);
        try {
            if (usr.removeUser (user_id_rem)) {
                out.println ("<label style=\"color:green;\">" + user_id_rem + "</label><div style=\"color:green;\"> Removed successfully from roster</div>");
            } else {
                out.println ("<label style=\"color:red;\">" + user_id_rem + "</label><div style=\"color:red;\">Removal from roster unsuccessful</div>");
            }
        } catch (SQLException e) {
            out.println ("SQLException: " + e);
        } finally {
            out.close ();
        }
    }
    out.close ();
}
</source>
<source file="./cmpt371group02/src/java/editRoster/removeFromRosterServ.java" startline="73" endline="77">
@Override
protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/editRoster/removeFromRosterServ.java" startline="86" endline="90">
@Override
protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/editRoster/removeFromRosterServ.java" startline="96" endline="99">
@Override
public String getServletInfo () {
    return "Short description";
}
</source>
<source file="./cmpt371group02/src/java/editRoster/displayTeamRosterServ.java" startline="38" endline="71">
protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("text/html");
    out = response.getWriter ();
    usr = new editRoster ();
    String steam_id = request.getParameter ("viewTeam");
    if (steam_id.equals ("")) {
        out.println ("<div style=\"color:red;\">Please select a team to view</div>");
    } else {
        Integer team_id = Integer.parseInt (steam_id);
        try {
            Vector rs = usr.getTeam (team_id);
            String title = "Display Team Roster";
            Vector tblHeader = new Vector ();
            tblHeader.addElement ("Player's ID");
            tblHeader.addElement ("Last Name");
            tblHeader.addElement ("First Name");
            tblHeader.addElement ("Team");
            display (rs, tblHeader, title, response);
        } catch (SQLException e) {
            out.println ("No users found");
        } catch (Exception e) {
        } finally {
            out.close ();
        }
    }
    out.close ();
}
</source>
<source file="./cmpt371group02/src/java/editRoster/displayTeamRosterServ.java" startline="80" endline="115">
private void display (Vector rows, Vector hdr, String title, HttpServletResponse response) throws SQLException, Exception {
    usrTeam = new playerManagerProfile ();
    response.setContentType ("text/html");
    out.println ("<HTML><HEAD><TITLE>");
    out.println ("Sports Management System");
    out.println ("</TITLE></HEAD><BODY>");
    out.println ("<tbody>");
    out.println ("<h1 id=\"table_id\">Current Roster:</h1>");
    out.println ("<table id=\"hor-minimalist-a\" >");
    out.println ("<tr valign=Top>");
    for (int i = 0;
    i < hdr.size (); i ++) {
        out.println ("<td valign=Top><b>" + hdr.elementAt (i).toString () + "</b><br></td>");
    }
    out.println ("</tr>");
    for (int i = 0;
    i < rows.size (); i ++) {
        out.println ("<tr valign=Top>");
        Vector row = (Vector) rows.elementAt (i);
        for (int j = 0;
        j < row.size (); j ++) {
            if (j != 3) {
                out.println ("<td valign=Top>" + row.elementAt (j).toString () + "<br></td>");
            } else {
                out.println ("<td valign=Top>" + usrTeam.getTeamName (row.elementAt (3).toString ()) + "<br></td>");
            }
        }
        out.println ("</tr>");
    }
    out.println ("</table>");
    out.println ("</tbody>");
    out.println ("</BODY></HTML>");
    out.close ();
}
</source>
<source file="./cmpt371group02/src/java/editRoster/displayTeamRosterServ.java" startline="125" endline="129">
@Override
protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/editRoster/displayTeamRosterServ.java" startline="138" endline="142">
@Override
protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/editRoster/displayTeamRosterServ.java" startline="148" endline="151">
@Override
public String getServletInfo () {
    return "Short description";
}
</source>
<source file="./cmpt371group02/src/java/editRoster/editRoster.java" startline="25" endline="35">
public editRoster () {
    try {
        db = ConnectionManager.getConnection ();
        st = db.createStatement ();
        dbf = new dbFunctions ();
    } catch (SQLException ex) {
        System.out.println ("DB open exception\n");
        System.exit (1);
    }
}
</source>
<source file="./cmpt371group02/src/java/editRoster/editRoster.java" startline="44" endline="53">
public boolean addUser (Integer user_id, Integer team_id) throws SQLException {
    if (getUser (user_id) == true) {
        String sql = "UPDATE users SET team_id = " + team_id + " WHERE user_id =" + user_id;
        st.executeUpdate (sql);
        return true;
    } else {
        return false;
    }
}
</source>
<source file="./cmpt371group02/src/java/editRoster/editRoster.java" startline="61" endline="69">
public boolean removeUser (Integer user_id) throws SQLException {
    if (getUser (user_id) == true) {
        String sql = "UPDATE users SET team_id = NULL WHERE user_id =" + user_id;
        st.executeUpdate (sql);
        return true;
    } else {
        return false;
    }
}
</source>
<source file="./cmpt371group02/src/java/editRoster/editRoster.java" startline="76" endline="84">
public Vector getTeam (int team_id) throws SQLException {
    String sql = "SELECT user_id, last_name, first_name, team_id FROM users WHERE team_id=" + team_id + " ORDER BY last_name";
    ResultSet result = st.executeQuery (sql);
    if (result.next ()) {
        return dbf.getRecord (sql);
    } else {
        return dbf.getRecord (sql);
    }
}
</source>
<source file="./cmpt371group02/src/java/editRoster/editRoster.java" startline="91" endline="99">
public Vector getUsers () throws SQLException, Exception {
    String sql = "SELECT user_id, last_name, first_name, IF (team_id IS NULL, '', team_id) team_id FROM users ORDER BY last_name";
    ResultSet result = st.executeQuery (sql);
    if (result.next ()) {
        return dbf.getRecord (sql);
    } else {
        throw new Exception ("No users");
    }
}
</source>
<source file="./cmpt371group02/src/java/editRoster/editRoster.java" startline="107" endline="118">
public boolean getUser (Integer user_id) throws SQLException {
    String sql = "SELECT user_id from users WHERE user_id = " + user_id;
    System.out.println ("got to getUser");
    ResultSet result = st.executeQuery (sql);
    if (result.next ()) {
        return true;
    } else {
        return false;
    }
}
</source>
<source file="./cmpt371group02/src/java/Connection/ConnectionManager.java" startline="20" endline="42">
public static Connection getConnection () {
    String url = "jdbc:mysql://edjo.usask.ca/cmpt371group2_TeamEffort";
    String dbname = "cmpt371group2_TeamEffort";
    String usernm = "cmpt371gr2user";
    String passwd = "T33m3ff0rT";
    try {
        Class.forName ("com.mysql.jdbc.Driver");
        try {
            con = DriverManager.getConnection (url, usernm, passwd);
        } catch (SQLException ex) {
            ex.printStackTrace ();
        }
    } catch (ClassNotFoundException e) {
        System.out.println (e);
    }
    return con;
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/getAnnouncementsServ.java" startline="31" endline="68">
protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    System.out.println ("HELLOTHERE");
    response.setContentType ("text/html;charset=UTF-8");
    out = response.getWriter ();
    usr = new playerManagerProfile ();
    Integer team_id = Integer.parseInt (request.getParameter ("team_id"));
    System.out.println ("TeamID: " + team_id);
    try {
        Vector rs = usr.getAnnouncements (team_id);
        out.println ("<html>");
        out.println ("<head>");
        out.println ("<title>Sports Management System</title>");
        out.println ("</head>");
        out.println ("<body>");
        for (int i = rs.size () - 1;
        i >= 0; i --) {
            Vector row = (Vector) rs.elementAt (i);
            out.println ("<b>" + usr.getPoster (row.elementAt (0).toString ()) + ":</b><br/>");
            out.println (row.elementAt (1).toString () + "<br/><br/>");
        }
        out.println ("</body>");
        out.println ("</html>");
    } catch (SQLException e) {
        out.println ("No Announcements found 1");
    } catch (Exception e) {
        out.println ("No Announcements found 2");
    } finally {
        out.close ();
    }
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/getAnnouncementsServ.java" startline="78" endline="82">
@Override
protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/getAnnouncementsServ.java" startline="91" endline="95">
@Override
protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/getAnnouncementsServ.java" startline="101" endline="104">
@Override
public String getServletInfo () {
    return "Short description";
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/getUpcomingGamesServ.java" startline="28" endline="60">
protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("text/html");
    out = response.getWriter ();
    usr = new playerManagerProfile ();
    Integer user_id = Integer.parseInt (request.getParameter ("user_id"));
    boolean num_games = Boolean.parseBoolean (request.getParameter ("num_games"));
    try {
        Vector rs = usr.getUpcomingGames (user_id, num_games);
        String title = "Upcoming Games";
        Vector tblHeader = new Vector ();
        tblHeader.addElement ("Home Team");
        tblHeader.addElement ("Away Team");
        tblHeader.addElement ("Location");
        tblHeader.addElement ("Date");
        display (rs, tblHeader, title, response);
    } catch (SQLException e) {
        out.println ("No games found");
    } catch (Exception e) {
        out.println ("No games found");
    } finally {
        out.close ();
    }
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/getUpcomingGamesServ.java" startline="63" endline="100">
private void display (Vector rows, Vector hdr, String title, HttpServletResponse response) throws SQLException, Exception {
    response.setContentType ("text/html");
    out.println ("<HTML><HEAD><TITLE>");
    out.println ("Sports Management System");
    out.println ("</TITLE></HEAD><BODY>");
    out.println ("<tbody>");
    out.println ("<table id=\"hor-minimalist-a\" >");
    out.println ("<tr valign=Top>");
    for (int i = 0;
    i < hdr.size (); i ++) {
        out.println ("<td valign=Top><b>" + hdr.elementAt (i).toString () + "</b><br></td>");
    }
    out.println ("</tr>");
    for (int i = 0;
    i < rows.size (); i ++) {
        out.println ("<tr valign=Top>");
        Vector row = (Vector) rows.elementAt (i);
        out.println ("<td valign=Top>" + usr.getTeamName (row.elementAt (0).toString ()) + "<br></td>");
        out.println ("<td valign=Top>" + usr.getTeamName (row.elementAt (1).toString ()) + "<br></td>");
        out.println ("<td valign=Top>" + row.elementAt (2).toString () + "<br></td>");
        out.println ("<td valign=Top>" + row.elementAt (3).toString () + "<br></td>");
        out.println ("</tr>");
    }
    out.println ("</table>");
    out.println ("</tbody>");
    out.println ("</BODY></HTML>");
    out.close ();
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/getUpcomingGamesServ.java" startline="110" endline="114">
@Override
protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/getUpcomingGamesServ.java" startline="123" endline="127">
@Override
protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/getUpcomingGamesServ.java" startline="133" endline="136">
@Override
public String getServletInfo () {
    return "Short description";
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/playerManagerProfile.java" startline="18" endline="28">
public playerManagerProfile () {
    try {
        db = ConnectionManager.getConnection ();
        st = db.createStatement ();
        dbf = new dbFunctions ();
    } catch (SQLException ex) {
        System.out.println ("DB open exception\n");
        System.exit (1);
    }
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/playerManagerProfile.java" startline="30" endline="31">
public void init () {
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/playerManagerProfile.java" startline="35" endline="45">
public Vector getAnnouncements () throws SQLException, Exception {
    String sql = "SELECT poster, message FROM announcements where (access = 2)";
    ResultSet result = st.executeQuery (sql);
    if (result.next ()) {
        System.out.println (dbf.getRecord (sql));
        return dbf.getRecord (sql);
    } else {
        throw new Exception ("No announcements found!");
    }
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/playerManagerProfile.java" startline="49" endline="61">
public Vector getAnnouncements (Integer team_id) throws SQLException, Exception {
    Integer manager_id = getManager (team_id);
    String sql = "SELECT poster, message FROM announcements where (poster = " + manager_id + ") OR (access = 2)";
    ResultSet result = st.executeQuery (sql);
    if (result.next ()) {
        System.out.println (dbf.getRecord (sql));
        return dbf.getRecord (sql);
    } else {
        throw new Exception ("No announcements found!");
    }
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/playerManagerProfile.java" startline="64" endline="87">
public Vector getUpcomingGames (Integer user_id, boolean num_games) throws SQLException, Exception {
    Integer team_id = getUserTeam (user_id);
    String sql;
    ResultSet result;
    if (num_games == false) {
        sql = "SELECT home_team, away_team, location, date FROM games where ((home_team = " + team_id + ") " + "OR (away_team = " + team_id + ")) ORDER BY date LIMIT 0,3";
        result = st.executeQuery (sql);
    } else {
        sql = "SELECT home_team, away_team, location, date FROM games where ((home_team = " + team_id + ") " + "OR (away_team = " + team_id + ")) ORDER BY date";
        result = st.executeQuery (sql);
    }
    if (result.next ()) {
        return dbf.getRecord (sql);
    } else {
        throw new Exception ("No games found for this season!");
    }
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/playerManagerProfile.java" startline="89" endline="95">
public int numGoals (int user_id) throws SQLException {
    String sql = "SELECT goal, COUNT(goal) FROM game_stats WHERE goal=" + user_id;
    ResultSet result = st.executeQuery (sql);
    result.next ();
    int numGoals = result.getInt ("COUNT(goal)");
    return numGoals;
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/playerManagerProfile.java" startline="97" endline="103">
public int numAssists (int user_id) throws SQLException {
    String sql = "SELECT assist, COUNT(assist) FROM game_stats WHERE assist=" + user_id;
    ResultSet result = st.executeQuery (sql);
    result.next ();
    int numAssists = result.getInt ("COUNT(assist)");
    return numAssists;
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/playerManagerProfile.java" startline="106" endline="117">
public String getTeamName (String steam_id) throws SQLException, Exception {
    int team_id = Integer.parseInt (steam_id);
    String sql = "SELECT team_name FROM teams WHERE team_id =" + team_id;
    ResultSet result = st.executeQuery (sql);
    if (result.next ()) {
        System.out.println (result.getString ("team_name"));
        return result.getString ("team_name");
    } else {
        throw new Exception ("No team found for this id!");
    }
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/playerManagerProfile.java" startline="120" endline="136">
public Integer getUserTeam (Integer user_id) throws SQLException, Exception {
    System.out.println ("got to getuserteam");
    System.out.println ("USER_ID: " + user_id);
    String sql = "SELECT team_id FROM users " + "WHERE user_id =" + user_id;
    ResultSet result = st.executeQuery (sql);
    if (result.next ()) {
        System.out.println (result.getInt ("team_id"));
        return result.getInt ("team_id");
    } else {
        throw new Exception ("No games found for this season!");
    }
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/playerManagerProfile.java" startline="139" endline="151">
public Integer getManager (Integer team_id) throws SQLException, Exception {
    String sql = "SELECT manager from teams WHERE team_id =" + team_id;
    ResultSet result = st.executeQuery (sql);
    if (result.next ()) {
        System.out.println (result.getInt ("manager"));
        return result.getInt ("manager");
    } else {
        throw new Exception ("No manager found!");
    }
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/playerManagerProfile.java" startline="154" endline="167">
public String getPoster (String user_id) throws SQLException, Exception {
    System.out.println ("USER_ID: " + user_id);
    String sql = "SELECT first_name from users WHERE user_id =" + user_id;
    ResultSet result = st.executeQuery (sql);
    if (result.next ()) {
        System.out.println (result.getString ("first_name"));
        return result.getString ("first_name");
    } else {
        throw new Exception ("No poster found!");
    }
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/getMyStatsServ.java" startline="28" endline="54">
protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("text/html");
    out = response.getWriter ();
    usr = new playerManagerProfile ();
    Integer user_id = Integer.parseInt (request.getParameter ("user_id_stats"));
    try {
        String title = "Upcoming Games";
        Vector tblHeader = new Vector ();
        tblHeader.addElement ("Goals");
        tblHeader.addElement ("Assists");
        display (tblHeader, title, user_id, response);
    } catch (SQLException e) {
        out.println ("No games found");
    } catch (Exception e) {
        out.println ("No games found");
    } finally {
        out.close ();
    }
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/getMyStatsServ.java" startline="57" endline="88">
private void display (Vector hdr, String title, int user_id, HttpServletResponse response) throws SQLException, Exception {
    response.setContentType ("text/html");
    out.println ("<HTML><HEAD><TITLE>");
    out.println ("Sports Management System");
    out.println ("</TITLE></HEAD><BODY>");
    out.println ("<tbody>");
    out.println ("<table id=\"hor-minimalist-a\" >");
    out.println ("<tr valign=Top>");
    for (int i = 0;
    i < hdr.size (); i ++) {
        out.println ("<td valign=Top><b>" + hdr.elementAt (i).toString () + "</b><br></td>");
    }
    out.println ("</tr>");
    out.println ("<td valign=Top>" + usr.numGoals (user_id) + "<br></td>");
    out.println ("<td valign=Top>" + usr.numAssists (user_id) + "<br></td>");
    out.println ("</tr>");
    out.println ("</table>");
    out.println ("</tbody>");
    out.println ("</BODY></HTML>");
    out.close ();
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/getMyStatsServ.java" startline="98" endline="102">
@Override
protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/getMyStatsServ.java" startline="111" endline="115">
@Override
protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/getMyStatsServ.java" startline="121" endline="124">
@Override
public String getServletInfo () {
    return "Short description";
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/announcementsServ.java" startline="33" endline="77">
protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("text/html;charset=UTF-8");
    out = response.getWriter ();
    ann = new announcements ();
    String message = request.getParameter ("messageArea");
    String suser_id = request.getParameter ("user_id");
    Integer user_id = Integer.parseInt (suser_id);
    String saccess = request.getParameter ("access");
    Integer access = Integer.parseInt (saccess);
    System.out.println (message);
    if (message.equals ("")) {
        out.println ("<div style=\"color:red;\"> Please enter an announcement</div>");
    } else {
        try {
            ann.postAnnouncement (message, user_id, access);
            out.println ("</label><div style=\"color:green;\"> Announcement posted successfully</div><br/>" + message);
        } catch (SQLException e) {
            System.out.println ("Post announcement failed!!");
        }
    }
    try {
    } finally {
        out.close ();
    }
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/announcementsServ.java" startline="87" endline="91">
@Override
protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/announcementsServ.java" startline="100" endline="104">
@Override
protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/announcementsServ.java" startline="110" endline="113">
@Override
public String getServletInfo () {
    return "Short description";
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/getAdminAnnouncementsServ.java" startline="30" endline="66">
protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    System.out.println ("HELLOTHERE");
    response.setContentType ("text/html;charset=UTF-8");
    out = response.getWriter ();
    usr = new playerManagerProfile ();
    try {
        Vector rs = usr.getAnnouncements ();
        System.out.println ("SECOND");
        out.println ("<html>");
        out.println ("<head>");
        out.println ("<title>Sports Management System</title>");
        out.println ("</head>");
        out.println ("<body>");
        for (int i = rs.size () - 1;
        i >= 0; i --) {
            Vector row = (Vector) rs.elementAt (i);
            out.println ("<b>" + usr.getPoster (row.elementAt (0).toString ()) + ":</b><br/>");
            out.println (row.elementAt (1).toString () + "<br/><br/>");
        }
        out.println ("</body>");
        out.println ("</html>");
    } catch (SQLException e) {
        out.println ("No Announcements found 1");
    } catch (Exception e) {
        out.println ("No Announcements found 2");
    } finally {
        out.close ();
    }
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/getAdminAnnouncementsServ.java" startline="76" endline="80">
@Override
protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/getAdminAnnouncementsServ.java" startline="89" endline="93">
@Override
protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/getAdminAnnouncementsServ.java" startline="99" endline="102">
@Override
public String getServletInfo () {
    return "Short description";
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/announcements.java" startline="20" endline="28">
public announcements () {
    try {
        db = ConnectionManager.getConnection ();
        st = db.createStatement ();
    } catch (SQLException ex) {
        System.out.println ("DB open exception\n");
        System.exit (1);
    }
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/announcements.java" startline="37" endline="42">
public void postAnnouncement (String message, Integer user_id, Integer access) throws SQLException {
    String values = "'" + user_id + "','" + StringEscapeUtils.escapeSql (message) + "','" + access + "'";
    String sql = "INSERT INTO announcements values (" + values + ")";
    st.executeUpdate (sql);
}
</source>
<source file="./cmpt371group02/src/java/playerManagerProfile/announcements.java" startline="49" endline="53">
public void getAccess (Integer user_id) throws SQLException {
    String sql = "SELECT access FROM users WHERE user_id =" + user_id;
    ResultSet result = st.executeQuery (sql);
}
</source>
<source file="./cmpt371group02/src/java/dbFunctions/dbFunctions.java" startline="23" endline="32">
public dbFunctions () {
    try {
        db = ConnectionManager.getConnection ();
        st = db.createStatement ();
    } catch (SQLException ex) {
        System.out.println ("DB open exception\n");
        System.exit (1);
    }
}
</source>
<source file="./cmpt371group02/src/java/dbFunctions/dbFunctions.java" startline="39" endline="57">
public Vector getRecord (String sql) {
    try {
        ResultSet dbrs = st.executeQuery (sql);
        if (! dbrs.next ()) {
            return null;
        }
        Vector rows = new Vector ();
        ResultSetMetaData dbrsmd = dbrs.getMetaData ();
        do {
            rows.addElement (getNextRow (dbrs, dbrsmd));
        } while (dbrs.next ());
        return rows;
    } catch (SQLException ex) {
        return null;
    }
}
</source>
<source file="./cmpt371group02/src/java/dbFunctions/dbFunctions.java" startline="63" endline="70">
private Vector getNextRow (ResultSet rs, ResultSetMetaData rsmd) throws SQLException {
    Vector curRow = new Vector ();
    for (int i = 1;
    i <= rsmd.getColumnCount (); i ++) {
        curRow.addElement (rs.getString (i));
    }
    return curRow;
}
</source>
<source file="./cmpt371group02/src/java/dbFunctions/dbFunctions.java" startline="72" endline="80">
public void shutdown () {
    try {
        st.close ();
        db.close ();
    } catch (SQLException e) {
        System.err.println ("Unable to close the DB Connection");
        e.printStackTrace ();
    }
}
</source>
<source file="./cmpt371group02/src/java/dbFunctions/dbFunctions.java" startline="82" endline="86">
protected void finalize () {
    if (db != null) {
        shutdown ();
    }
}
</source>
<source file="./cmpt371group02/src/java/editSchedule/editSchedule.java" startline="21" endline="31">
public editSchedule () {
    try {
        db = ConnectionManager.getConnection ();
        st = db.createStatement ();
        dbf = new dbFunctions ();
    } catch (SQLException ex) {
        System.out.println ("DB open exception\n");
        System.exit (1);
    }
}
</source>
<source file="./cmpt371group02/src/java/editSchedule/editSchedule.java" startline="42" endline="55">
public boolean addGame (Integer home_team_id, Integer away_team_id, Integer date, String location) throws SQLException {
    System.out.println ("got to addGame");
    if (! gameConflict (home_team_id, away_team_id, date)) {
        String sql = "INSERT INTO games (home_team, away_team, date, location) values (" + home_team_id + "," + away_team_id + ",'" + date + "','" + location + "')";
        st.executeUpdate (sql);
        return true;
    } else {
        return false;
    }
}
</source>
<source file="./cmpt371group02/src/java/editSchedule/editSchedule.java" startline="66" endline="76">
public boolean removeGame (Integer game_id) throws SQLException {
    System.out.println ("got to removeGame");
    if (getGame (game_id) == true) {
        String sql = "DELETE FROM games where game_id=" + game_id;
        st.executeUpdate (sql);
        return true;
    } else {
        return false;
    }
}
</source>
<source file="./cmpt371group02/src/java/editSchedule/editSchedule.java" startline="83" endline="91">
public Vector getGames () throws SQLException, Exception {
    String sql = "SELECT game_id, home_team, away_team, location, date FROM games ORDER BY date";
    ResultSet result = st.executeQuery (sql);
    if (result.next ()) {
        return dbf.getRecord (sql);
    } else {
        throw new Exception ("No games found for this season!");
    }
}
</source>
<source file="./cmpt371group02/src/java/editSchedule/editSchedule.java" startline="99" endline="107">
private boolean getGame (Integer game_id) throws SQLException {
    String sql = "SELECT game_id from games WHERE game_id = " + game_id;
    ResultSet result = st.executeQuery (sql);
    if (result.next ()) {
        return true;
    } else {
        return false;
    }
}
</source>
<source file="./cmpt371group02/src/java/editSchedule/editSchedule.java" startline="117" endline="129">
private boolean gameConflict (Integer home_team_id, Integer away_team_id, Integer date) throws SQLException {
    String sql = "SELECT * from games WHERE (((home_team = " + home_team_id + ") AND (date = '" + date + "')) OR ((away_team = " + home_team_id + ") AND (date = '" + date + "'))) " + "OR (((home_team = " + away_team_id + ") AND (date = '" + date + "')) OR ((away_team = " + away_team_id + ") AND (date = '" + date + "')))";
    System.out.println ("**Checking for conflict game!**");
    ResultSet result = st.executeQuery (sql);
    if (result.next ()) {
        return true;
    } else {
        return false;
    }
}
</source>
<source file="./cmpt371group02/src/java/editSchedule/removeGameServ.java" startline="31" endline="58">
protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("text/html");
    out = response.getWriter ();
    usr = new editSchedule ();
    String sgame_id_rem = request.getParameter ("game_id");
    if (sgame_id_rem == "") {
        out.println ("<div style=\"color:red;\"> Please enter a Game ID</div>");
    } else {
        int game_id_rem = Integer.parseInt (sgame_id_rem);
        try {
            if (usr.removeGame (game_id_rem)) {
                out.println ("<p style=\"color:green;\">" + game_id_rem + "</p><div style=\"color:green;\"> Removed successfully from schedule</div>");
            } else {
                out.println ("<p style=\"color:red;\">" + game_id_rem + "</p><div style=\"color:red;\">Removal from schedule unsuccessful!</div>");
            }
        } catch (SQLException e) {
            out.println ("SQL ERROR: " + e);
        } finally {
            out.close ();
        }
    }
    out.close ();
}
</source>
<source file="./cmpt371group02/src/java/editSchedule/removeGameServ.java" startline="68" endline="72">
@Override
protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/editSchedule/removeGameServ.java" startline="81" endline="85">
@Override
protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/editSchedule/removeGameServ.java" startline="91" endline="94">
@Override
public String getServletInfo () {
    return "Short description";
}
</source>
<source file="./cmpt371group02/src/java/editSchedule/addGameServ.java" startline="31" endline="69">
protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("text/html");
    out = response.getWriter ();
    usr = new editSchedule ();
    String shome_team_id = request.getParameter ("homeTeam");
    String saway_team_id = request.getParameter ("awayTeam");
    String sdate = request.getParameter ("date");
    String slocation = request.getParameter ("location");
    if (shome_team_id.equals ("")) {
        out.println ("<div style=\"color:red;\">Please select home team!</div>");
    } else if (saway_team_id.equals ("")) {
        out.println ("<div style=\"color:red;\">Please select away team!</div>");
    } else if (sdate.equals ("")) {
        out.println ("<div style=\"color:red;\">Please enter a date for this game!</div>");
    } else if (slocation.equals ("")) {
        out.println ("<div style=\"color:red;\">Please enter a location for this game!</div>");
    } else {
        Integer home_team_id = Integer.parseInt (shome_team_id);
        Integer away_team_id = Integer.parseInt (saway_team_id);
        Integer date = Integer.parseInt (sdate);
        try {
            if (usr.addGame (home_team_id, away_team_id, date, slocation)) {
                out.println ("<p style=\"color:green;\"> User #" + home_team_id + "</p><div style=\"color:green;\"> Game succesfully added.</div>");
            } else {
                out.println ("<p style=\"color:red;\"> User #" + home_team_id + "</p><div style=\"color:red;\">ERROR: Game not added!</div>");
            }
        } catch (SQLException e) {
        }
    }

    out.close ();
}
</source>
<source file="./cmpt371group02/src/java/editSchedule/addGameServ.java" startline="79" endline="83">
@Override
protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/editSchedule/addGameServ.java" startline="92" endline="96">
@Override
protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/editSchedule/addGameServ.java" startline="102" endline="105">
@Override
public String getServletInfo () {
    return "Short description";
}
</source>
<source file="./cmpt371group02/src/java/editSchedule/displayScheduleServ.java" startline="33" endline="61">
protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("text/html");
    out = response.getWriter ();
    usr = new editSchedule ();
    try {
        Vector rs = usr.getGames ();
        String title = "Display Schedule";
        Vector tblHeader = new Vector ();
        tblHeader.addElement ("GameID");
        tblHeader.addElement ("Home Team");
        tblHeader.addElement ("Away Team");
        tblHeader.addElement ("Location");
        tblHeader.addElement ("Date");
        display (rs, tblHeader, title, response);
    } catch (SQLException e) {
        out.println ("No games found");
    } catch (Exception e) {
        out.println ("No games found");
    } finally {
        out.close ();
    }
}
</source>
<source file="./cmpt371group02/src/java/editSchedule/displayScheduleServ.java" startline="70" endline="110">
private void display (Vector rows, Vector hdr, String title, HttpServletResponse response) throws SQLException, Exception {
    response.setContentType ("text/html");
    gamesUsr = new playerManagerProfile ();
    out.println ("<HTML><HEAD><TITLE>");
    out.println ("Sports Management System");
    out.println ("</TITLE></HEAD><BODY>");
    out.println ("<tbody>");
    out.println ("<h1 id=\"table_id\">Schedule</h1>");
    out.println ("<table id=\"hor-minimalist-a\" >");
    out.println ("<tr valign=Top>");
    for (int i = 0;
    i < hdr.size (); i ++) {
        out.println ("<td valign=Top><b>" + hdr.elementAt (i).toString () + "</b><br></td>");
    }
    out.println ("</tr>");
    for (int i = 0;
    i < rows.size (); i ++) {
        out.println ("<tr valign=Top>");
        Vector row = (Vector) rows.elementAt (i);
        out.println ("<td valign=Top>" + row.elementAt (0).toString () + "<br></td>");
        out.println ("<td valign=Top>" + gamesUsr.getTeamName (row.elementAt (1).toString ()) + "<br></td>");
        out.println ("<td valign=Top>" + gamesUsr.getTeamName (row.elementAt (2).toString ()) + "<br></td>");
        out.println ("<td valign=Top>" + row.elementAt (3).toString () + "<br></td>");
        out.println ("<td valign=Top>" + row.elementAt (4).toString () + "<br></td>");
        out.println ("</tr>");
    }
    out.println ("</table>");
    out.println ("</tbody>");
    out.println ("</BODY></HTML>");
    out.close ();
}
</source>
<source file="./cmpt371group02/src/java/editSchedule/displayScheduleServ.java" startline="120" endline="124">
@Override
protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/editSchedule/displayScheduleServ.java" startline="133" endline="137">
@Override
protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/editSchedule/displayScheduleServ.java" startline="143" endline="146">
@Override
public String getServletInfo () {
    return "Short description";
}
</source>
<source file="./cmpt371group02/src/java/Controller/adminController.java" startline="32" endline="80">
protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("text/html;charset=UTF-8");
    PrintWriter out = response.getWriter ();
    String button = request.getParameter ("buttonPressed");
    String season = request.getParameter ("Season");
    if (season == "") {
        Calendar cal = Calendar.getInstance ();
        Integer year = cal.get (Calendar.YEAR);
        season = year.toString ();
    }
    if (button.equals ("Add/Remove Team")) {
        response.sendRedirect ("addRemoveTeam.jsp?season=" + season);
    } else if (button.equals ("Add/Remove User")) {
        response.sendRedirect ("addRemoveUser.jsp?season=" + season);
    } else if (button.equals ("Edit Rosters")) {
        response.sendRedirect ("editRoster.jsp?season=" + season);
    } else if (button.equals ("Edit Schedule")) {
        response.sendRedirect ("editSchedule.jsp?season=" + season);
    } else if (button.equals ("Update Stats")) {
        response.sendRedirect ("editStats.jsp?season=" + season);
    } else if (button.equals ("Post Announcement")) {
        response.sendRedirect ("postAnnouncement.jsp?season=" + season);
    } else {
        System.out.println ("bad admin home redirect");
    }

    request.getParameter ("Season");
    try {
    } finally {
        out.close ();
    }
}
</source>
<source file="./cmpt371group02/src/java/Controller/adminController.java" startline="90" endline="94">
@Override
protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/Controller/adminController.java" startline="103" endline="107">
@Override
protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/Controller/adminController.java" startline="113" endline="116">
@Override
public String getServletInfo () {
    return "Short description";
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/submitFinalResultServ.java" startline="31" endline="57">
protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("text/html");
    out = response.getWriter ();
    usr = new addRemoveStats ();
    String sgame_id = request.getParameter ("game_id");
    if (sgame_id.equals ("")) {
    } else {
        Integer game_id = Integer.parseInt (sgame_id);
        try {
            usr.setGamePlayed (game_id);
        } catch (SQLException e) {
            out.println ("No users found!!");
        } catch (Exception e) {
            System.out.println (e);
            out.println ("No users found!!!!!");
        } finally {
            out.close ();
        }
    }
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/submitFinalResultServ.java" startline="67" endline="71">
@Override
protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/submitFinalResultServ.java" startline="80" endline="84">
@Override
protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/submitFinalResultServ.java" startline="90" endline="93">
@Override
public String getServletInfo () {
    return "Short description";
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/addRemoveStats.java" startline="25" endline="36">
public addRemoveStats () {
    String table1 = "teams";
    try {
        db = ConnectionManager.getConnection ();
        st = db.createStatement ();
        dbf = new dbFunctions ();
    } catch (SQLException ex) {
        System.out.println ("DB open exception\n");
        System.exit (1);
    }
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/addRemoveStats.java" startline="44" endline="50">
public String getGameStatus (int game_id) throws SQLException {
    String sql = "SELECT status from games WHERE game_id =" + game_id;
    ResultSet result = st.executeQuery (sql);
    result.next ();
    String game_status = result.getString ("status");
    return game_status;
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/addRemoveStats.java" startline="52" endline="55">
public void setGamePlayed (int game_id) throws SQLException {
    String sql = "UPDATE games SET status = 'Played' WHERE game_id =" + game_id;
    st.executeUpdate (sql);
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/addRemoveStats.java" startline="64" endline="71">
public int numGoals (String user_id, int game_id) throws SQLException {
    int iuser_id = Integer.parseInt (user_id);
    String sql = "SELECT goal, COUNT(goal) FROM game_stats WHERE goal=" + iuser_id + " AND game_id=" + game_id;
    ResultSet result = st.executeQuery (sql);
    result.next ();
    int numGoals = result.getInt ("COUNT(goal)");
    return numGoals;
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/addRemoveStats.java" startline="79" endline="85">
public int numHomeGoals (int game_id) throws SQLException {
    String sql = "SELECT home_score FROM games WHERE game_id=" + game_id;
    ResultSet result = st.executeQuery (sql);
    result.next ();
    int numGoals = result.getInt ("home_score");
    return numGoals;
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/addRemoveStats.java" startline="93" endline="99">
public int numAwayGoals (int game_id) throws SQLException {
    String sql = "SELECT away_score FROM games WHERE game_id=" + game_id;
    ResultSet result = st.executeQuery (sql);
    result.next ();
    int numGoals = result.getInt ("away_score");
    return numGoals;
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/addRemoveStats.java" startline="108" endline="115">
public int numAssists (String user_id, int game_id) throws SQLException {
    int iuser_id = Integer.parseInt (user_id);
    String sql = "SELECT assist, COUNT(assist) FROM game_stats WHERE assist=" + iuser_id + " AND game_id=" + game_id;
    ResultSet result = st.executeQuery (sql);
    result.next ();
    int numAssists = result.getInt ("COUNT(assist)");
    return numAssists;
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/addRemoveStats.java" startline="127" endline="138">
public boolean addGoal (int game_id, int score_id, int assist_id, String game_type) throws SQLException {
    String sql = "INSERT INTO game_stats VALUE(" + game_id + "," + score_id + "," + assist_id + ")";
    st.executeUpdate (sql);
    if (game_type.equals ("home")) {
        sql = "UPDATE games SET home_score=home_score+1 WHERE game_id=" + game_id;
    } else if (game_type.equals ("away")) {
        sql = "UPDATE games SET away_score=away_score+1 WHERE game_id=" + game_id;
    }

    st.executeUpdate (sql);
    System.out.println ("here");
    return true;
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/addRemoveStats.java" startline="149" endline="159">
public boolean addGoal (int game_id, int score_id, String game_type) throws SQLException {
    String sql = "INSERT INTO game_stats (game_id, goal) VALUE(" + game_id + "," + score_id + ")";
    st.executeUpdate (sql);
    if (game_type.equals ("home")) {
        sql = "UPDATE games SET home_score=home_score+1 WHERE game_id=" + game_id;
    } else if (game_type.equals ("away")) {
        sql = "UPDATE games SET away_score=away_score+1 WHERE game_id=" + game_id;
    }

    st.executeUpdate (sql);
    return true;
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/addRemoveStats.java" startline="171" endline="185">
public boolean removeGoal (int game_id, int score_id, int assist_id, String game_type) throws SQLException {
    if (statExists (game_id, score_id, assist_id)) {
        String sql = "DELETE FROM game_stats WHERE game_id=" + game_id + " AND goal=" + score_id + " AND assist=" + assist_id + " LIMIT 1";
        st.executeUpdate (sql);
        if (game_type.equals ("home")) {
            sql = "UPDATE games SET home_score=home_score-1 WHERE game_id=" + game_id;
        } else if (game_type.equals ("away")) {
            sql = "UPDATE games SET away_score=away_score-1 WHERE game_id=" + game_id;
        }

        st.executeUpdate (sql);
        return true;
    } else {
        return false;
    }
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/addRemoveStats.java" startline="196" endline="210">
public boolean removeGoal (int game_id, int score_id, String game_type) throws SQLException {
    if (statExists (game_id, score_id)) {
        String sql = "DELETE FROM game_stats WHERE game_id=" + game_id + " AND goal=" + score_id + " AND assist IS NULL" + " LIMIT 1";
        st.executeUpdate (sql);
        if (game_type.equals ("home")) {
            sql = "UPDATE games SET home_score=home_score-1 WHERE game_id=" + game_id;
        } else if (game_type.equals ("away")) {
            sql = "UPDATE games SET away_score=away_score-1 WHERE game_id=" + game_id;
        }

        st.executeUpdate (sql);
        return true;
    } else {
        return false;
    }
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/addRemoveStats.java" startline="220" endline="228">
private boolean statExists (int game_id, int goal_id, int assist_id) throws SQLException {
    String sql = "SELECT * from game_stats WHERE game_id = " + game_id + " AND goal=" + goal_id + " AND assist=" + assist_id;
    ResultSet result = st.executeQuery (sql);
    if (result.next ()) {
        return true;
    } else {
        return false;
    }
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/addRemoveStats.java" startline="237" endline="245">
private boolean statExists (int game_id, int goal_id) throws SQLException {
    String sql = "SELECT * from game_stats WHERE game_id = " + game_id + " AND goal=" + goal_id + " AND assist IS NULL";
    ResultSet result = st.executeQuery (sql);
    if (result.next ()) {
        return true;
    } else {
        return false;
    }
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/addRemoveStats.java" startline="253" endline="259">
public String getTeamName (int team_id) throws SQLException {
    String sql = "SELECT team_name from teams WHERE team_id =" + team_id;
    ResultSet result = st.executeQuery (sql);
    result.next ();
    String team_name = result.getString ("team_name");
    return team_name;
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/addRemoveStats.java" startline="267" endline="273">
public int getHomeTeam (int game_id) throws SQLException {
    String sql = "SELECT home_team FROM games WHERE game_id=" + game_id;
    ResultSet result = st.executeQuery (sql);
    result.next ();
    int home_team = result.getInt ("home_team");
    return home_team;
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/addRemoveStats.java" startline="281" endline="287">
public int getAwayTeam (int game_id) throws SQLException {
    String sql = "SELECT away_team FROM games WHERE game_id=" + game_id;
    ResultSet result = st.executeQuery (sql);
    result.next ();
    int away_team = result.getInt ("away_team");
    return away_team;
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/addRemoveStats.java" startline="295" endline="304">
public Vector getHomePlayers (int game_id) throws SQLException {
    String sql = "SELECT user_id, IF (jersey_number IS NULL, '', jersey_number) jersey_number, last_name, first_name FROM users WHERE team_id=" + getHomeTeam (game_id) + " ORDER BY last_name";
    ResultSet result = st.executeQuery (sql);
    if (result.next ()) {
        return dbf.getRecord (sql);
    } else {
        return dbf.getRecord (sql);
    }
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/addRemoveStats.java" startline="312" endline="321">
public Vector getAwayPlayers (int game_id) throws SQLException {
    String sql = "SELECT user_id, IF (jersey_number IS NULL, '', jersey_number) jersey_number, last_name, first_name FROM users WHERE team_id=" + getAwayTeam (game_id) + " ORDER BY last_name";
    ResultSet result = st.executeQuery (sql);
    if (result.next ()) {
        return dbf.getRecord (sql);
    } else {
        return dbf.getRecord (sql);
    }
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/displayFinalScoreServ.java" startline="37" endline="67">
protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("text/html");
    out = response.getWriter ();
    usr = new addRemoveStats ();
    String sgame_id = request.getParameter ("game_id");
    if (sgame_id.equals ("")) {
    } else {
        Integer game_id = Integer.parseInt (sgame_id);
        try {
            String homeTeam = usr.getTeamName (usr.getHomeTeam (game_id));
            String awayTeam = usr.getTeamName (usr.getAwayTeam (game_id));
            int homeScore = usr.numHomeGoals (game_id);
            int awayScore = usr.numAwayGoals (game_id);
            display (homeTeam, awayTeam, homeScore, awayScore, response);
        } catch (SQLException e) {
            out.println ("No users found!!");
        } catch (Exception e) {
            System.out.println (e);
            out.println ("No users found!!!!!");
        } finally {
            out.close ();
        }
    }
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/displayFinalScoreServ.java" startline="69" endline="80">
private void display (String homeTeam, String awayTeam, int homeScore, int awayScore, HttpServletResponse response) throws SQLException {
    response.setContentType ("text/html");
    out.println ("<HTML><HEAD><TITLE>");
    out.println ("Sports Management System");
    out.println ("</TITLE></HEAD><BODY>");
    out.println ("<h1><b>" + homeTeam + " " + homeScore + " - " + awayScore + " " + awayTeam + "</b></h1>");
    out.println ("</tbody>");
    out.println ("</BODY></HTML>");
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/displayFinalScoreServ.java" startline="90" endline="94">
@Override
protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/displayFinalScoreServ.java" startline="103" endline="107">
@Override
protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/displayFinalScoreServ.java" startline="113" endline="116">
@Override
public String getServletInfo () {
    return "Short description";
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/addGoalServ.java" startline="38" endline="90">
protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("text/html");
    out = response.getWriter ();
    usr = new addRemoveStats ();
    String sgame_id = request.getParameter ("game_id");
    String sscore_id = request.getParameter ("scorePlayer");
    String sassist_id = request.getParameter ("assistPlayer");
    String game_type = request.getParameter ("game_type");
    System.out.println (sscore_id + ", " + sassist_id + ", " + sgame_id + ", " + game_type);
    if (sgame_id.equals ("")) {
        out.println ("<div style=\"color:red;\">Please select a game</div>");
    } else if (sscore_id.equals ("")) {
        out.println ("<div style=\"color:red;\">Please select a player</div>");
    } else {
        Integer game_id = Integer.parseInt (sgame_id);
        Integer score_id = Integer.parseInt (sscore_id);
        if (! sassist_id.equals ("")) {
            Integer assist_id = Integer.parseInt (sassist_id);
            try {
                if (usr.addGoal (game_id, score_id, assist_id, game_type)) {
                    out.println ("<p style=\"color:green;\"> Game " + game_id + "</p><div style=\"color:green;\"> Result added successfully</div>");
                } else;

            } catch (SQLException e) {
                out.println ("<label style=\"color:red;\"> Result" + "</label><div style=\"color:red;\">not added succesfully. SQL Exception: " + e + " </div>");
            } finally {
                out.close ();
            }
        } else {
            try {
                if (usr.addGoal (game_id, score_id, game_type)) {
                    out.println ("<p style=\"color:green;\"> Game " + game_id + "</p><div style=\"color:green;\"> Result added successfully</div>");
                } else;

            } catch (SQLException e) {
                out.println ("<label style=\"color:red;\"> Result" + "</label><div style=\"color:red;\">not added succesfully. SQL Exception: " + e + " </div>");
            } finally {
                out.close ();
            }
        }
    }

    out.close ();
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/addGoalServ.java" startline="100" endline="104">
@Override
protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/addGoalServ.java" startline="113" endline="117">
@Override
protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/addGoalServ.java" startline="123" endline="126">
@Override
public String getServletInfo () {
    return "Short description";
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/displayStatsServ.java" startline="36" endline="80">
protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("text/html");
    out = response.getWriter ();
    usr = new addRemoveStats ();
    String sgame_id = request.getParameter ("game_id");
    if (sgame_id.equals ("")) {
    } else {
        Integer game_id = Integer.parseInt (sgame_id);
        try {
            Vector rs = usr.getHomePlayers (game_id);
            String title = usr.getTeamName (usr.getHomeTeam (game_id));
            Vector tblHeader = new Vector ();
            tblHeader.addElement ("#");
            tblHeader.addElement ("Last Name");
            tblHeader.addElement ("First Name");
            tblHeader.addElement ("Goals");
            tblHeader.addElement ("Assists");
            display (rs, tblHeader, title, response, game_id);
            Vector rs1 = usr.getAwayPlayers (game_id);
            title = usr.getTeamName (usr.getAwayTeam (game_id));
            tblHeader = new Vector ();
            tblHeader.addElement ("#");
            tblHeader.addElement ("Last Name");
            tblHeader.addElement ("First Name");
            tblHeader.addElement ("Goals");
            tblHeader.addElement ("Assists");
            display (rs1, tblHeader, title, response, game_id);
        } catch (SQLException e) {
            out.println ("No users found!!");
        } catch (Exception e) {
            System.out.println (e);
            out.println ("No users found!!!!!");
        } finally {
            out.close ();
        }
    }
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/displayStatsServ.java" startline="89" endline="128">
private void display (Vector rows, Vector hdr, String title, HttpServletResponse response, int game_id) throws SQLException {
    response.setContentType ("text/html");
    out.println ("<HTML><HEAD><TITLE>");
    out.println ("Sports Management System");
    out.println ("</TITLE></HEAD><BODY>");
    out.println ("<tbody>");
    out.println ("<h1 id=\"table_id\">" + title + "</h1>");
    out.println ("<table id=\"hor-minimalist-a\" >");
    out.println ("<tr valign=Top>");
    for (int i = 0;
    i < hdr.size (); i ++) {
        out.println ("<td valign=Top><b>" + hdr.elementAt (i).toString () + "</b><br></td>");
    }
    out.println ("</tr>");
    for (int i = 0;
    i < rows.size (); i ++) {
        out.println ("<tr valign=Top>");
        Vector row = (Vector) rows.elementAt (i);
        for (int j = 0;
        j < 6; j ++) {
            if (j != 0 && j != 4 && j != 5) {
                System.out.println (row.elementAt (j).toString ());
                out.println ("<td valign=Top>" + row.elementAt (j).toString ());
            }
            if (j == 4) {
                out.println ("<td valign=Top>" + usr.numGoals (row.elementAt (0).toString (), game_id));
            }
            if (j == 5) {
                out.println ("<td valign=Top>" + usr.numAssists (row.elementAt (0).toString (), game_id));
            }
        }
        out.println ("</tr>");
    }
    out.println ("</table>");
    out.println ("</tbody>");
    out.println ("</BODY></HTML>");
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/displayStatsServ.java" startline="138" endline="142">
@Override
protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/displayStatsServ.java" startline="151" endline="155">
@Override
protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/displayStatsServ.java" startline="161" endline="164">
@Override
public String getServletInfo () {
    return "Short description";
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/removeGoalServ.java" startline="33" endline="83">
protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("text/html");
    out = response.getWriter ();
    usr = new addRemoveStats ();
    String sgame_id = request.getParameter ("game_id");
    String sscore_id = request.getParameter ("scorePlayer");
    String sassist_id = request.getParameter ("assistPlayer");
    String game_type = request.getParameter ("game_type");
    if (sgame_id.equals ("")) {
        out.println ("<div style=\"color:red;\">Please select a game</div>");
    } else if (sscore_id.equals ("")) {
        out.println ("<div style=\"color:red;\">Please select a player</div>");
    } else {
        Integer game_id = Integer.parseInt (sgame_id);
        Integer score_id = Integer.parseInt (sscore_id);
        if (! sassist_id.equals ("")) {
            Integer assist_id = Integer.parseInt (sassist_id);
            try {
                if (usr.removeGoal (game_id, score_id, assist_id, game_type)) {
                    out.println ("<p style=\"color:green;\"> Game " + game_id + "</p><div style=\"color:green;\"> Result removed successfully</div>");
                } else {
                    out.println ("<div style=\"color:red;\">Stat not found</div>");
                }
            } catch (SQLException e) {
                out.println ("<p style=\"color:red;\"> Result" + "</p><div style=\"color:red;\">not removed succesfully. SQL Exception: " + e + " </div>");
            } finally {
                out.close ();
            }
        } else {
            try {
                if (usr.removeGoal (game_id, score_id, game_type)) {
                    out.println ("<p style=\"color:green;\"> Game " + game_id + "</p><div style=\"color:green;\"> Result removed successfully</div>");
                } else {
                    out.println ("<div style=\"color:red;\">Stat not found</div>");
                }
            } catch (SQLException e) {
                out.println ("<label style=\"color:red;\"> Result" + "</label><div style=\"color:red;\">not removed succesfully. SQL Exception: " + e + " </div>");
            } finally {
                out.close ();
            }
        }
    }

    out.close ();
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/removeGoalServ.java" startline="93" endline="97">
@Override
protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/removeGoalServ.java" startline="106" endline="110">
@Override
protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/removeGoalServ.java" startline="116" endline="119">
@Override
public String getServletInfo () {
    return "Short description";
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/displayGameStatusServ.java" startline="35" endline="62">
protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("text/html");
    out = response.getWriter ();
    usr = new addRemoveStats ();
    String sgame_id = request.getParameter ("game_id");
    if (sgame_id.equals ("")) {
    } else {
        Integer game_id = Integer.parseInt (sgame_id);
        try {
            String gameStatus = usr.getGameStatus (game_id);
            display (gameStatus, response);
        } catch (SQLException e) {
            out.println ("No users found!!");
        } catch (Exception e) {
            System.out.println (e);
            out.println ("No users found!!!!!");
        } finally {
            out.close ();
        }
    }
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/displayGameStatusServ.java" startline="64" endline="69">
private void display (String game_status, HttpServletResponse response) throws SQLException {
    response.setContentType ("text/html");
    out.println (game_status);
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/displayGameStatusServ.java" startline="79" endline="83">
@Override
protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/displayGameStatusServ.java" startline="92" endline="96">
@Override
protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/addRemoveStats/displayGameStatusServ.java" startline="102" endline="105">
@Override
public String getServletInfo () {
    return "Short description";
}
</source>
<source file="./cmpt371group02/src/java/addRemoveTeam/removeTeamServ.java" startline="35" endline="62">
protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("text/html");
    out = response.getWriter ();
    usr = new addRemoveTeam ();
    String steam_id_rem = request.getParameter ("remTeam");
    if (steam_id_rem == "") {
        out.println ("<div style=\"color:red;\"> Please enter a team ID</div>");
    } else {
        int team_id_rem = Integer.parseInt (steam_id_rem);
        try {
            if (usr.removeTeam (team_id_rem)) {
                out.println ("<p style=\"color:green;\">" + team_id_rem + "</p><div style=\"color:green;\"> Removed successfully from database</div>");
            } else {
                out.println ("<p style=\"color:red;\">" + team_id_rem + "</p><div style=\"color:red;\">Removal from roster unsuccessful</div>");
            }
        } catch (SQLException e) {
            out.println ("SQL Exception: " + e);
        } finally {
            out.close ();
        }
    }
    out.close ();
}
</source>
<source file="./cmpt371group02/src/java/addRemoveTeam/removeTeamServ.java" startline="72" endline="76">
@Override
protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/addRemoveTeam/removeTeamServ.java" startline="85" endline="89">
@Override
protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/addRemoveTeam/removeTeamServ.java" startline="95" endline="98">
@Override
public String getServletInfo () {
    return "Short description";
}
</source>
<source file="./cmpt371group02/src/java/addRemoveTeam/displayTeamsServ.java" startline="32" endline="64">
protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("text/html");
    out = response.getWriter ();
    usr = new addRemoveTeam ();
    try {
        Vector rs = usr.getTeam ();
        String title = "Display Team List";
        Vector tblHeader = new Vector ();
        tblHeader.addElement ("TeamID");
        tblHeader.addElement ("Team Name");
        tblHeader.addElement ("Manager");
        tblHeader.addElement ("Year");
        tblHeader.addElement ("Games Played");
        tblHeader.addElement ("Wins");
        tblHeader.addElement ("Losses");
        tblHeader.addElement ("Ties");
        tblHeader.addElement ("Points");
        tblHeader.addElement ("Ratio");
        tblHeader.addElement ("Goals For");
        tblHeader.addElement ("Goals Against");
        display (rs, tblHeader, title, response);
    } catch (SQLException e) {
        out.println ("No teams found");
    } catch (Exception e) {
        out.println ("No teams found");
    } finally {
        out.close ();
    }
}
</source>
<source file="./cmpt371group02/src/java/addRemoveTeam/displayTeamsServ.java" startline="73" endline="104">
private void display (Vector rows, Vector hdr, String title, HttpServletResponse response) {
    response.setContentType ("text/html");
    out.println ("<HTML><HEAD><TITLE>");
    out.println ("Sports Management System");
    out.println ("</TITLE></HEAD><BODY>");
    out.println ("<tbody>");
    out.println ("<h1 id=\"table_id\">Teams</h1>");
    out.println ("<table id=\"hor-minimalist-a\" >");
    out.println ("<tr valign=Top>");
    for (int i = 0;
    i < hdr.size (); i ++) {
        out.println ("<td valign=Top><b>" + hdr.elementAt (i).toString () + "</b><br></td>");
    }
    out.println ("</tr>");
    for (int i = 0;
    i < rows.size (); i ++) {
        out.println ("<tr valign=Top>");
        Vector row = (Vector) rows.elementAt (i);
        for (int j = 0;
        j < row.size (); j ++) {
            out.println ("<td valign=Top>" + row.elementAt (j).toString () + "<br></td>");
        }
        out.println ("</tr>");
    }
    out.println ("</table>");
    out.println ("</tbody>");
    out.println ("</BODY></HTML>");
    out.close ();
}
</source>
<source file="./cmpt371group02/src/java/addRemoveTeam/displayTeamsServ.java" startline="114" endline="118">
@Override
protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/addRemoveTeam/displayTeamsServ.java" startline="127" endline="131">
@Override
protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/addRemoveTeam/displayTeamsServ.java" startline="137" endline="140">
@Override
public String getServletInfo () {
    return "Short description";
}
</source>
<source file="./cmpt371group02/src/java/addRemoveTeam/addRemoveTeam.java" startline="21" endline="32">
public addRemoveTeam () {
    String table1 = "teams";
    try {
        db = ConnectionManager.getConnection ();
        st = db.createStatement ();
        dbf = new dbFunctions ();
    } catch (SQLException ex) {
        System.out.println ("DB open exception\n");
        System.exit (1);
    }
}
</source>
<source file="./cmpt371group02/src/java/addRemoveTeam/addRemoveTeam.java" startline="42" endline="50">
public boolean addTeam (String team_name, int manager, int year) throws SQLException {
    String values = "'" + team_name + "','" + manager + "'," + year + "," + 0 + "," + 0 + "," + 0 + "," + 0 + "," + 0 + "," + 0 + "," + 0 + "," + 0;
    String sql = "INSERT INTO teams (team_name, manager, year, games_played," + "wins, losses, ties, points, ratio, goals_for, goals_against) values (" + values + ")";
    st.executeUpdate (sql);
    return true;
}
</source>
<source file="./cmpt371group02/src/java/addRemoveTeam/addRemoveTeam.java" startline="58" endline="68">
public boolean removeTeam (int team_id_r) throws SQLException {
    if (getTeam (team_id_r) == true) {
        String sql = "UPDATE users SET team_id = NULL WHERE team_id =" + team_id_r;
        st.executeUpdate (sql);
        sql = "DELETE from teams WHERE team_id = " + team_id_r;
        st.executeUpdate (sql);
        return true;
    } else {
        return false;
    }
}
</source>
<source file="./cmpt371group02/src/java/addRemoveTeam/addRemoveTeam.java" startline="75" endline="83">
public Vector getTeam () throws SQLException, Exception {
    String sql = "SELECT * from teams";
    ResultSet result = st.executeQuery (sql);
    if (result.next ()) {
        return dbf.getRecord (sql);
    } else {
        throw new Exception ("No teams");
    }
}
</source>
<source file="./cmpt371group02/src/java/addRemoveTeam/addRemoveTeam.java" startline="91" endline="99">
public boolean getTeam (int team_id_r) throws SQLException {
    String sql = "SELECT team_id from teams WHERE team_id = " + team_id_r;
    ResultSet result = st.executeQuery (sql);
    if (result.next ()) {
        return true;
    } else {
        return false;
    }
}
</source>
<source file="./cmpt371group02/src/java/addRemoveTeam/addTeamServ.java" startline="35" endline="67">
protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("text/html");
    out = response.getWriter ();
    usr = new addRemoveTeam ();
    String steam_name = request.getParameter ("team_name");
    String smanager_id = request.getParameter ("manager_id");
    String syear = request.getParameter ("year");
    if (steam_name.equals ("")) {
        out.println ("<div style=\"color:red;\">Please enter a team name</div>");
    } else if (smanager_id.equals ("")) {
        out.println ("<div style=\"color:red;\">Please select a manager</div>");
    } else {
        Integer manager_id = Integer.parseInt (smanager_id);
        Integer year = Integer.parseInt (syear);
        try {
            if (usr.addTeam (steam_name, manager_id, year)) {
                out.println ("<p style=\"color:green;\"> Team" + steam_name + "</p><div style=\"color:green;\"> Added successfully</div>");
            } else {
                out.println ("<p style=\"color:red;\"> Team" + steam_name + "</p><div style=\"color:red;\">Not added to roster</div>");
            }
        } catch (SQLException e) {
        }
    }

    out.close ();
}
</source>
<source file="./cmpt371group02/src/java/addRemoveTeam/addTeamServ.java" startline="77" endline="81">
@Override
protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/addRemoveTeam/addTeamServ.java" startline="90" endline="94">
@Override
protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/addRemoveTeam/addTeamServ.java" startline="100" endline="103">
@Override
public String getServletInfo () {
    return "Short description";
}
</source>
<source file="./cmpt371group02/src/java/login/LoginServlet.java" startline="28" endline="66">
public void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, java.io.IOException {
    try {
        userBean user = new userBean ();
        user.setUserName (request.getParameter ("un"));
        user.setPassword (request.getParameter ("pw"));
        user = userDAO.login (user);
        if (user.isValid ()) {
            HttpSession session = request.getSession (true);
            session.setAttribute ("currentSessionUser", user);
            if (user.getAccessLevel ().equals (2)) {
                response.sendRedirect ("adminHome.jsp");
            } else if (user.getAccessLevel ().equals (1)) {
                response.sendRedirect ("mngrProfile.jsp");
            } else {
                response.sendRedirect ("playerProfile.jsp");
            }

        } else {
            response.sendRedirect ("invalidLogin.jsp");
        }
    } catch (Throwable theException) {
        System.out.println (theException);
    }
}
</source>
<source file="./cmpt371group02/src/java/login/userDAO.java" startline="29" endline="119">
public static userBean login (userBean bean) {
    Statement stmt = null;
    String username = bean.getUsername ();
    String password = bean.getPassword ();
    String searchQuery = "select * from users where username='" + username + "' AND password='" + password + "'";
    System.out.println ("Your user name is " + username);
    System.out.println ("Your password is " + password);
    System.out.println ("Query: " + searchQuery);
    try {
        currentCon = ConnectionManager.getConnection ();
        stmt = currentCon.createStatement ();
        rs = stmt.executeQuery (searchQuery);
        boolean more = rs.next ();
        if (! more) {
            System.out.println ("Sorry, you are not a registered user! Please sign up first");
            bean.setValid (false);
        } else if (more) {
            Integer user_id = rs.getInt ("user_id");
            String firstName = rs.getString ("first_name");
            String lastName = rs.getString ("last_name");
            String address = rs.getString ("address");
            Integer team_id = rs.getInt ("team_id");
            Date birthdate = rs.getDate ("birthdate");
            Integer phone_number = rs.getInt ("phone_number");
            short fees_paid = rs.getShort ("fees_paid");
            Integer jersey_number = rs.getInt ("jersey_number");
            Integer accessLevel = rs.getInt ("access");
            System.out.println ("Welcome " + firstName);
            bean.setUser_id (user_id);
            bean.setFirstName (firstName);
            bean.setLastName (lastName);
            bean.setAccessLevel (accessLevel);
            bean.setAddress (address);
            bean.setBirthdate (birthdate);
            bean.setFees_paid (fees_paid);
            bean.setJersey_number (jersey_number);
            bean.setPhone_number (phone_number);
            bean.setTeam_id (team_id);
            bean.setValid (true);
        }

    } catch (Exception ex) {
        System.out.println ("Log In failed: An Exception has occurred! " + ex);
    } finally {
        if (rs != null) {
            try {
                rs.close ();
            } catch (Exception e) {
            }
            rs = null;
        }
        if (stmt != null) {
            try {
                stmt.close ();
            } catch (Exception e) {
            }
            stmt = null;
        }
        if (currentCon != null) {
            try {
                currentCon.close ();
            } catch (Exception e) {
            }
            currentCon = null;
        }
    }
    return bean;
}
</source>
<source file="./cmpt371group02/src/java/login/userBean.java" startline="26" endline="28">
public void setUser_id (Integer user_id) {
    this.user_id = user_id;
}
</source>
<source file="./cmpt371group02/src/java/login/userBean.java" startline="30" endline="32">
public Integer getUser_id () {
    return user_id;
}
</source>
<source file="./cmpt371group02/src/java/login/userBean.java" startline="34" endline="36">
public void setJersey_number (Integer jersey_number) {
    this.jersey_number = jersey_number;
}
</source>
<source file="./cmpt371group02/src/java/login/userBean.java" startline="38" endline="40">
public Integer getJersey_number () {
    return jersey_number;
}
</source>
<source file="./cmpt371group02/src/java/login/userBean.java" startline="42" endline="44">
public void setFees_paid (short fees_paid) {
    this.fees_paid = fees_paid;
}
</source>
<source file="./cmpt371group02/src/java/login/userBean.java" startline="46" endline="48">
public short getFees_paid () {
    return fees_paid;
}
</source>
<source file="./cmpt371group02/src/java/login/userBean.java" startline="50" endline="52">
public void setPhone_number (Integer phone_number) {
    this.phone_number = phone_number;
}
</source>
<source file="./cmpt371group02/src/java/login/userBean.java" startline="54" endline="56">
public Integer getPhone_number () {
    return phone_number;
}
</source>
<source file="./cmpt371group02/src/java/login/userBean.java" startline="58" endline="60">
public void setBirthdate (Date birthdate) {
    this.birthdate = birthdate;
}
</source>
<source file="./cmpt371group02/src/java/login/userBean.java" startline="62" endline="64">
public Date getBirthdate () {
    return birthdate;
}
</source>
<source file="./cmpt371group02/src/java/login/userBean.java" startline="66" endline="68">
public void setTeam_id (Integer team_id) {
    this.team_id = team_id;
}
</source>
<source file="./cmpt371group02/src/java/login/userBean.java" startline="70" endline="72">
public Integer getTeam_id () {
    return team_id;
}
</source>
<source file="./cmpt371group02/src/java/login/userBean.java" startline="74" endline="76">
public void setAddress (String address) {
    this.address = address;
}
</source>
<source file="./cmpt371group02/src/java/login/userBean.java" startline="78" endline="80">
public String getAddress () {
    return address;
}
</source>
<source file="./cmpt371group02/src/java/login/userBean.java" startline="82" endline="84">
public void setAccessLevel (Integer accessLevel) {
    this.accessLevel = accessLevel;
}
</source>
<source file="./cmpt371group02/src/java/login/userBean.java" startline="86" endline="88">
public Integer getAccessLevel () {
    return accessLevel;
}
</source>
<source file="./cmpt371group02/src/java/login/userBean.java" startline="90" endline="92">
public String getFirstName () {
    return firstName;
}
</source>
<source file="./cmpt371group02/src/java/login/userBean.java" startline="94" endline="96">
public void setFirstName (String newFirstName) {
    firstName = newFirstName;
}
</source>
<source file="./cmpt371group02/src/java/login/userBean.java" startline="98" endline="100">
public String getLastName () {
    return lastName;
}
</source>
<source file="./cmpt371group02/src/java/login/userBean.java" startline="102" endline="104">
public void setLastName (String newLastName) {
    lastName = newLastName;
}
</source>
<source file="./cmpt371group02/src/java/login/userBean.java" startline="106" endline="108">
public String getPassword () {
    return password;
}
</source>
<source file="./cmpt371group02/src/java/login/userBean.java" startline="110" endline="112">
public void setPassword (String newPassword) {
    password = newPassword;
}
</source>
<source file="./cmpt371group02/src/java/login/userBean.java" startline="114" endline="116">
public String getUsername () {
    return username;
}
</source>
<source file="./cmpt371group02/src/java/login/userBean.java" startline="118" endline="120">
public void setUserName (String newUsername) {
    username = newUsername;
}
</source>
<source file="./cmpt371group02/src/java/login/userBean.java" startline="122" endline="124">
public boolean isValid () {
    return valid;
}
</source>
<source file="./cmpt371group02/src/java/login/userBean.java" startline="126" endline="128">
public void setValid (boolean newValid) {
    valid = newValid;
}
</source>
<source file="./cmpt371group02/src/java/addRemoveUser/addUserServ.java" startline="31" endline="67">
protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("text/html");
    out = response.getWriter ();
    usr = new addRemoveUser ();
    String sfirst_name = request.getParameter ("first_name");
    String slast_name = request.getParameter ("last_name");
    String susername = request.getParameter ("username");
    String spassword = request.getParameter ("password");
    String saccess = request.getParameter ("access");
    if (sfirst_name.equals ("")) {
        out.println ("<div style=\"color:red;\"> Please enter a first name</div>");
    } else if (slast_name.equals ("")) {
        out.println ("<div style=\"color:red;\"> Please enter a last name</div>");
    } else if (susername.equals ("")) {
        out.println ("<div style=\"color:red;\"> Please enter a username</div>");
    } else if (spassword.equals ("")) {
        out.println ("<div style=\"color:red;\"> Please enter a password</div>");
    } else if (saccess.equals ("")) {
        out.println ("<div style=\"color:red;\"> Please select a user type</div>");
    } else {
        char caccess = saccess.charAt (0);
        try {
            usr.addUser (sfirst_name, slast_name, susername, spassword, caccess);
            out.println ("<label style=\"color:green;\">" + sfirst_name + " " + slast_name + "</label><div style=\"color:green;\"> Added successfully</div>");
        } catch (SQLException e) {
        }
    }

}
</source>
<source file="./cmpt371group02/src/java/addRemoveUser/addUserServ.java" startline="77" endline="81">
@Override
protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/addRemoveUser/addUserServ.java" startline="90" endline="94">
@Override
protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/addRemoveUser/addUserServ.java" startline="100" endline="103">
@Override
public String getServletInfo () {
    return "Short description";
}
</source>
<source file="./cmpt371group02/src/java/addRemoveUser/removeUserServ.java" startline="34" endline="65">
protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("text/html");
    out = response.getWriter ();
    usr = new addRemoveUser ();
    String suser_id_rem = request.getParameter ("user_id");
    if (suser_id_rem.equals ("")) {
        out.println ("<div style=\"color:red;\"> Please Enter a user ID</div>");
    } else {
        int user_id_rem = Integer.parseInt (suser_id_rem);
        try {
            if (usr.removeUser (user_id_rem)) {
                out.println ("<label style=\"color:green;\">" + user_id_rem + "</label><div style=\"color:green;\"> Removed successfully</div>");
            } else {
                out.println ("<label style=\"color:red;\">" + user_id_rem + "</label><div style=\"color:red;\">Removal unsuccessful</div>");
            }
        } catch (SQLException e) {
            displayACK ("ERROR", "Attempt to remove user failed! User: " + user_id_rem + " not found!", response);
        }
    }
    out.close ();
}
</source>
<source file="./cmpt371group02/src/java/addRemoveUser/removeUserServ.java" startline="67" endline="79">
private void displayACK (String op, String txt, HttpServletResponse response) {
    response.setContentType ("text/html");
    out.println ("<HTML><HEAD><TITLE>");
    out.println ("Team Management System");
    out.println ("</TITLE></HEAD><BODY>");
    out.println ("<H1>" + op + "</H1>");
    out.println ("<H2> ==========================================<br>");
    out.println ("<H2> " + txt + "<br>");
    out.println ("<H2> ==========================================<br>");
    out.println ("</BODY></HTML>");
    out.close ();
}
</source>
<source file="./cmpt371group02/src/java/addRemoveUser/removeUserServ.java" startline="89" endline="93">
@Override
protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/addRemoveUser/removeUserServ.java" startline="102" endline="106">
@Override
protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/addRemoveUser/removeUserServ.java" startline="112" endline="115">
@Override
public String getServletInfo () {
    return "Short description";
}
</source>
<source file="./cmpt371group02/src/java/addRemoveUser/addRemoveUser.java" startline="22" endline="33">
public addRemoveUser () {
    String table1 = "users";
    try {
        db = ConnectionManager.getConnection ();
        st = db.createStatement ();
        dbf = new dbFunctions ();
    } catch (SQLException ex) {
        System.out.println ("DB open exception\n");
        System.exit (1);
    }
}
</source>
<source file="./cmpt371group02/src/java/addRemoveUser/addRemoveUser.java" startline="44" endline="50">
public void addUser (String first_name, String last_name, String username, String password, char access) throws SQLException {
    String values = "'" + first_name + "','" + last_name + "','" + username + "','" + password + "','" + access + "'";
    String sql = "INSERT INTO users (first_name, last_name, username, password, access" + ") values (" + values + ")";
    st.executeUpdate (sql);
}
</source>
<source file="./cmpt371group02/src/java/addRemoveUser/addRemoveUser.java" startline="58" endline="67">
public boolean removeUser (Integer user_id) throws SQLException {
    if (userExists (user_id) == true) {
        String sql = "DELETE from users WHERE user_id =" + user_id;
        st.executeUpdate (sql);
        return true;
    } else {
        return false;
    }
}
</source>
<source file="./cmpt371group02/src/java/addRemoveUser/addRemoveUser.java" startline="75" endline="83">
public Vector getUsers () throws SQLException, Exception {
    String sql = "SELECT user_id, first_name, last_name, username, password, access from users";
    ResultSet result = st.executeQuery (sql);
    if (result.next ()) {
        return dbf.getRecord (sql);
    } else {
        throw new Exception ("No users");
    }
}
</source>
<source file="./cmpt371group02/src/java/addRemoveUser/addRemoveUser.java" startline="91" endline="100">
public boolean userExists (Integer user_id) throws SQLException {
    String sql = "SELECT user_id from users WHERE user_id = " + user_id;
    ResultSet result = st.executeQuery (sql);
    if (result.next ()) {
        return true;
    } else {
        return false;
    }
}
</source>
<source file="./cmpt371group02/src/java/addRemoveUser/displayUserServ.java" startline="36" endline="62">
protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    response.setContentType ("text/html");
    out = response.getWriter ();
    usr = new addRemoveUser ();
    try {
        Vector rs = usr.getUsers ();
        String title = "Display User List";
        Vector tblHeader = new Vector ();
        tblHeader.addElement ("User ID");
        tblHeader.addElement ("First Name");
        tblHeader.addElement ("Last Name");
        tblHeader.addElement ("Username");
        tblHeader.addElement ("Password");
        tblHeader.addElement ("Access");
        display (rs, tblHeader, title, response);
    } catch (SQLException e) {
        out.println ("No users found");
    } catch (Exception e) {
        out.println ("No users found");
    } finally {
        out.close ();
    }
}
</source>
<source file="./cmpt371group02/src/java/addRemoveUser/displayUserServ.java" startline="73" endline="103">
private void display (Vector rows, Vector hdr, String title, HttpServletResponse response) {
    response.setContentType ("text/html");
    out.println ("<HTML><HEAD><TITLE>");
    out.println ("Sports Management System");
    out.println ("</TITLE></HEAD><BODY>");
    out.println ("<tbody>");
    out.println ("<h1 id=\"table_id\">Users</h1>");
    out.println ("<table id=\"hor-minimalist-a\" >");
    out.println ("<tr valign=Top>");
    for (int i = 0;
    i < hdr.size (); i ++) {
        out.println ("<td valign=Top><b>" + hdr.elementAt (i).toString () + "</b><br></td>");
    }
    out.println ("</tr>");
    for (int i = 0;
    i < rows.size (); i ++) {
        out.println ("<tr valign=Top>");
        Vector row = (Vector) rows.elementAt (i);
        for (int j = 0;
        j < row.size (); j ++) {
            out.println ("<td valign=Top>" + row.elementAt (j).toString () + "<br></td>");
        }
        out.println ("</tr>");
    }
    out.println ("</table>");
    out.println ("</tbody>");
    out.println ("</BODY></HTML>");
    out.close ();
}
</source>
<source file="./cmpt371group02/src/java/addRemoveUser/displayUserServ.java" startline="113" endline="117">
@Override
protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/addRemoveUser/displayUserServ.java" startline="126" endline="130">
@Override
protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    processRequest (request, response);
}
</source>
<source file="./cmpt371group02/src/java/addRemoveUser/displayUserServ.java" startline="136" endline="139">
@Override
public String getServletInfo () {
    return "Short description";
}
</source>
<source file="./cmpt371group02/src/java/editStats/editResultServ.java" startline="37" endline="52">
protected void processRequest (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException, SQLException {
    response.setContentType ("text/html");
    usr = new editStats ();
    String sgame_id = request.getParameter ("game_id");
    String season = request.getParameter ("season");
    int game_id = Integer.parseInt (sgame_id);
    int home_team = usr.getHomeTeam (game_id);
    int away_team = usr.getAwayTeam (game_id);
    response.sendRedirect ("addRemoveStats.jsp?game_id=" + sgame_id + "&home_team=" + home_team + "&away_team=" + away_team + "&season=" + season);
}
</source>
<source file="./cmpt371group02/src/java/editStats/editResultServ.java" startline="62" endline="70">
@Override
protected void doGet (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    try {
        processRequest (request, response);
    } catch (SQLException ex) {
        Logger.getLogger (editResultServ.class.getName ()).log (Level.SEVERE, null, ex);
    }
}
</source>
<source file="./cmpt371group02/src/java/editStats/editResultServ.java" startline="79" endline="87">
@Override
protected void doPost (HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
    try {
        processRequest (request, response);
    } catch (SQLException ex) {
        Logger.getLogger (editResultServ.class.getName ()).log (Level.SEVERE, null, ex);
    }
}
</source>
<source file="./cmpt371group02/src/java/editStats/editResultServ.java" startline="93" endline="96">
@Override
public String getServletInfo () {
    return "Short description";
}
</source>
<source file="./cmpt371group02/src/java/editStats/editStats.java" startline="23" endline="33">
public editStats () {
    String table1 = "teams";
    try {
        db = ConnectionManager.getConnection ();
        st = db.createStatement ();
    } catch (SQLException ex) {
        System.out.println ("DB open exception\n");
        System.exit (1);
    }
}
</source>
<source file="./cmpt371group02/src/java/editStats/editStats.java" startline="41" endline="47">
public int getHomeTeam (int game_id) throws SQLException {
    String sql = "SELECT home_team FROM games WHERE game_id=" + game_id;
    ResultSet result = st.executeQuery (sql);
    result.next ();
    int home_team = result.getInt ("home_team");
    return home_team;
}
</source>
<source file="./cmpt371group02/src/java/editStats/editStats.java" startline="55" endline="61">
public int getAwayTeam (int game_id) throws SQLException {
    String sql = "SELECT away_team FROM games WHERE game_id=" + game_id;
    ResultSet result = st.executeQuery (sql);
    result.next ();
    int away_team = result.getInt ("away_team");
    return away_team;
}
</source>
